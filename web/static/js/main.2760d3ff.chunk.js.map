{"version":3,"sources":["logo.svg","components/bookingDetail.js","components/hall.js","components/movie.js","App.js","reportWebVitals.js","index.js"],"names":["BookingDetail","state","name","showBookingDetail","handleShow","bind","handleClose","e","this","props","handlePurchase","mv","movie","mt","movieTime","sSeat","selectedSeat","Modal","show","onHide","backdrop","keyboard","Header","closeButton","Title","From","Body","map","s","ToggleButton","id","value","variant","disable","Form","Group","as","Row","className","controlId","Label","column","sm","Col","Control","plaintext","Footer","Button","onClick","handleSave","Component","Hall","selectedMovie","confirmBooking","handleChange","val","console","log","some","item","setState","filter","str","concat","handleConfirmBooking","selectedMovieTime","layout","JSON","parse","hall","ToggleButtonGroup","type","Table","striped","bordered","hover","items","index","subItems","sIndex","Movie","showHall","jwt_token","booking","soldseat","bookTicket","cancelTicket","purchaseTicket","selectSeat","mvid","fetch","then","res","json","data","ReserveSeat","catch","mvId","method","body","response","ok","headers","get","Error","status","error","alert","jwt_decode","sub","reqParams","stringify","movies","CardGroup","Card","style","width","Text","ms","time","App","showModal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2760d3ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport NavbarCollapse from \"react-bootstrap/esm/NavbarCollapse\";\n\nclass BookingDetail extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"React\",\n      showBookingDetail: true,\n      \n    };\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n \n  handleShow(e){\n\n  }\n  handleClose(e){\n    this.props.handleClose(e)\n  }\n  handleSave(e){\n    this.props.handlePurchase(e)\n  }\n  render() {\n    var mv = this.props.movie;\n    var mt = this.props.movieTime;\n    var sSeat = this.props.selectedSeat\n    var show = true;\n    return(\n      <>\n        <Modal show={show} onHide={() => this.handleClose()} backdrop=\"static\"\n        keyboard={false}>\n          <Modal.Header closeButton>\n            <Modal.Title>{mv.name} - {mt.From}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <h5>You have selected Seat </h5>\n           \n              {sSeat.map((s) => (\n                  <ToggleButton id=\"tbg-check-{s}\" value={s} \n                  variant=\"primary\" disable={true}>\n                  {s} \n              </ToggleButton>\n              ))}\n             \n            <Form>\n              <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextName\">\n              <Form.Label column sm=\"2\">\n                Name\n              </Form.Label>\n              <Col sm=\"10\">\n                <Form.Control plaintext  />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextEmail\">\n              <Form.Label column sm=\"2\">\n                Email\n              </Form.Label>\n              <Col sm=\"10\">\n                <Form.Control plaintext  />\n              </Col>\n            </Form.Group>\n          </Form>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => this.handleClose()}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={() => this.handleSave()}>\n              Checkout\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n      \n  }\n}\n\n\nexport default BookingDetail;\n","\nimport React, { Component } from 'react'\n\nimport Button from 'react-bootstrap/Button';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport Table from 'react-bootstrap/Table';\nimport 'holderjs';\n\nclass Hall extends Component {\n    constructor() {\n        super();\n        \n        this.state = {\n          name: \"React\",\n          showBookingDetail: false,\n          selectedMovie: null,\n          selectedSeat : []\n          \n        };\n        this.confirmBooking = this.confirmBooking.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        \n    }\n    \n    handleChange(e,val){\n        console.log(\"val : \");\n        console.log(val);\n        if (this.state.selectedSeat.some(item => val === item)){\n            console.log(\"value exist, remove\")\n            this.setState({selectedSeat: this.state.selectedSeat.filter(function(str) { \n                return str !== val \n            })});\n        } else {\n            this.setState({selectedSeat : this.state.selectedSeat.concat(val)});\n        }\n        console.log(this.state.selectedSeat);\n       // e.target.className = \"btn btn-error\"\n    }\n    confirmBooking(mv ,mt,sSeat){\n        this.props.handleConfirmBooking(mv ,mt,sSeat);\n    }\n\n    render() {\n          var mv = this.props.selectedMovie;\n          var mt = this.props.selectedMovieTime;\n          var sSeat = this.state.selectedSeat;\n          const layout = JSON.parse(\"[\"+mt.hall.layout+\"]\");\n          \n        return(<div>\n            <ToggleButtonGroup id=\"row1\" type=\"checkbox\" variant=\"primary\" >\n            <Table striped bordered hover variant=\"dark\">\n    <tbody>\n      \n                \n            {layout.map((items, index) => (\n                <tr>\n                \n                {items.map((subItems, sIndex) => (\n                    <td><ToggleButton id=\"tbg-check-{subItems}\" value={subItems} \n                    variant={sSeat.some(item => subItems === item)?'warning':'primary'}\n                    onClick={(e) => this.handleChange(e,subItems)} >\n                    {subItems}\n                </ToggleButton></td>\n                ))}\n                \n                 </tr>\n            ))}\n           \n           </tbody>\n            </Table>\n            </ToggleButtonGroup><div>\n            <Button onClick={() => this.confirmBooking(mv,mt,sSeat)}>\n              Confirm Booking\n            </Button></div>\n            </div>)\n    };\n}\n\nexport default Hall","\nimport { render } from '@testing-library/react';\nimport React, { Component } from 'react'\nimport BookingDetail from './bookingDetail';\nimport Hall from './hall';\nimport Card from 'react-bootstrap/Card';\nimport CardGroup from 'react-bootstrap/CardGroup';\nimport Button from 'react-bootstrap/Button';\nimport jwt_decode from \"jwt-decode\";\n\nclass Movie extends Component {\n  constructor() {\n    super();\n    \n    this.state = {\n      name: \"React\",\n      showBookingDetail: false,\n      showHall: false,\n      selectedMovie: null,\n      selectedMovieTime: null,\n      selectedSeat: null,\n      jwt_token: null,\n      booking: null,\n      soldseat: null\n    };\n    this.bookTicket = this.bookTicket.bind(this);\n    this.cancelTicket = this.cancelTicket.bind(this);\n    this.purchaseTicket = this.purchaseTicket.bind(this);\n    this.selectSeat = this.selectSeat.bind(this)\n    this.confirmBooking = this.confirmBooking.bind(this);\n  }\n  \n\n  bookTicket(mvid) {\n    \n    console.log(mvid);\n    //validate input\n    fetch('http://localhost:8080/movies?mvid='+mvid)\n    .then(res => res.json())\n    .then((data) => {\n      console.log(data[0])\n      this.setState({selectedMovie: data[0]}, () => this.ReserveSeat())\n      console.log('set data done')\n    })\n    .catch(console.log)\n    \n   \n  }\n  selectSeat(movie,movieTime){\n    this.setState({selectedMovie: movie});\n    this.setState({selectedMovieTime: movieTime});\n    const mvId = movieTime.id;\n    const reqParams = {\n      method: 'POST',\n      body: mvId\n    };\n    fetch('http://localhost:8080/api/movie/v1/seatstatus',reqParams)\n    .then((response) => {\n      console.log(response);\n      if(!response.ok) throw new Error(response.status);\n      else {\n        var jwt_token = response.headers.get('request-hash')\n        this.setState({jwt_token: jwt_token})\n\tconsole.log(response)\n        return response;\n      }\n    })\n    .then((data) => {\n      console.log(data)\n      this.setState({soldseat:data});\n      this.setState({showHall:true});\n    })\n    .catch((error) => {\n      console.log('error: ' + error);\n      this.setState({showHall:true});\n      this.setState({soldseat: null});\n      this.setState({selectedMovie: null});\n      this.setState({selectedMovieTime: null});\n      alert('Error, failed to get data');\n    });\n\n  }\n\n  confirmBooking( mv ,mt, sSeat){\n    this.setState({selectedSeat: sSeat});\n    this.setState({selectedMovie: mv});\n    this.setState({selectedMovieTime: mt});\n    this.setState({showHall:false});\n    alert(this.state.jwt_token)\n    var jwt_token = jwt_decode(this.state.jwt_token);\n    var booking = {id: jwt_token.sub}\n    \n    //post to backend to reserve\n    const reqParams = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json',\n                  'request-hash': this.state.jwt_token},  \n      body: JSON.stringify(booking)\n    };\n    fetch('http://localhost:8080/api/booking/v1/reserve',reqParams)\n    .then((response) => {\n      console.log(response);\n      if(!response.ok) throw new Error(response.status);\n      else return response;\n    })\n    .then((data) => {\n        console.log(mv);\n        this.setState({showBookingDetail: true});      \n    })  \n    .catch((error) => {\n      console.log('error: ' + error);\n      this.setState({showBookingDetail: false});\n      this.setState({selectedSeat: null});\n      this.setState({selectedMovie: null});\n      this.setState({selectedMovieTime: null});\n      alert('Sorry, The seat(s) that you selected is taken by others');\n    });\n    \n    //show popup for booking\n    //show popup taken, refresh view\n  }\n  cancelTicket(e){\n    //clear blocked seat\n    this.setState({selectedMovie: null})\n    this.setState({showBookingDetail: false});\n  }\n  purchaseTicket(e){\n    //clear blocked seat\n    this.setState({selectedMovie: null})\n    this.setState({showBookingDetail: false});\n  }\n    //const Movie = ({ movies }) => {\n    render() {\n      const showBookingDetail=this.state.showBookingDetail;\n      const showHall=this.state.showHall;\n      const movies = this.props.movies;\n      const selectedMovie = this.state.selectedMovie;\n      const selectedMovieTime = this.state.selectedMovieTime;\n      return (\n        <div>\n          {showBookingDetail && <BookingDetail movie={this.state.selectedMovie}  movieTime={this.state.selectedMovieTime} \n          selectedSeat={this.state.selectedSeat}\n          handleClose={this.cancelTicket} handlePurchase={this.purchaseTicket} />}\n          <center><h1>Movie List</h1></center>\n          <CardGroup>\n          {movies.map((movie) => (\n            <Card style={{ width: '18rem' }} key={movie.id}>\n              \n                <Card.Body>\n                <Card.Title>{movie.name}</Card.Title>\n                <Card.Text>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sodales volutpat sodales. \n                </Card.Text>\n                \n                {movie.movieTime != null && movie.movieTime.map((ms) => (\n                   <Button variant=\"link\" onClick={() => this.selectSeat(movie,ms)} movie={movie} movieTime={ms} key={ms.id}  >{ms.time}</Button>\n                ))}\n              </Card.Body>\n              </Card>\n          ))}\n          </CardGroup>\n          {showHall && <Hall handleConfirmBooking={this.confirmBooking} selectedMovie={selectedMovie} selectedMovieTime={selectedMovieTime} />}\n\n        </div>\n      )\n    };\n  }\nexport default Movie\n","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react'\nimport Movie from './components/movie';\n\n\nclass App extends Component {\n\n  state = {\n    movies: [],\n    showModal: false\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/api/movie/v1/list')\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ movies: data })\n    })\n    .catch(console.log)\n  }\n\n  render (){\n    return (\n    <div className=\"card\">\n            <div className=\"card-body\">\n\n              \n                <Movie movies={this.state.movies} />\n              \n              \n            </div>\n\n          </div>\n          )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}